# command: developer.webex.com/read_api_spec.py -s Messaging -t "Attachment Actions" Events Memberships Messages, People, "Room Tabs" Rooms "Team Memberships" Teams Webhooks -f developer.webex.com/messaging.yml
docs:
  Attachment Actions:
    doc: Users create attachment actions by interacting with message attachments such
      as clicking on a submit button in a card.
    header: Attachment Actions
    methods:
    - doc: Create a new attachment action.
      documentation:
        doc: Create an Attachment Action
        doc_link: https://developer.webex.com/docs/api/v1/attachment-actions/create-an-attachment-action
        endpoint: https://webexapis.com/v1/attachment/actions
        http_method: POST
      header: Create an Attachment Action
      parameters_and_response:
        Body Parameters:
        - doc: 'The type of action to perform.

            '
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ID of the message which contains the attachment.
          name: messageId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The attachment action's inputs.
          name: inputs
          param_attrs:
          - doc: ''
            name: Name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Url
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Tel
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: object
          type_spec: required
        Response Properties:
        - doc: A unique identifier for the action.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the person who performed the action.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the room in which the action was performed.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'The type of action performed.

            '
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The parent message on which the attachment action was performed.
          name: messageId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The action's inputs.
          name: inputs
          param_attrs: []
          param_object:
          - doc: ''
            name: Name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Url
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Tel
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: The date and time the action was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Shows details for a attachment action, by ID.

        Specify the attachment action ID in the id URI parameter.'
      documentation:
        doc: Get Attachment Action Details
        doc_link: https://developer.webex.com/docs/api/v1/attachment-actions/get-attachment-action-details
        endpoint: https://webexapis.com/v1/attachment/actions/{id}
        http_method: GET
      header: Get Attachment Action Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the action.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the person who performed the action.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the room in which the action was performed.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'The type of action performed.

            '
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The parent message on which the attachment action was performed.
          name: messageId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The action's inputs.
          name: inputs
          param_attrs: []
          param_object:
          - doc: ''
            name: Name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Url
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Email
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: Tel
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        - doc: The date and time the action was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: A unique identifier for the attachment action.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Events:
    doc: 'Events are generated when actions take place within Webex, such as when
      someone creates or deletes a message.

      The Events API can only be used by a Compliance Officer with an API access token
      that contains the spark-compliance:events_read scope. See the Compliance Guide
      for more information.'
    header: Events
    methods:
    - doc: 'List events in your organization. Several query parameters are available
        to filter the events returned in the response.

        Long result sets will be split into pages.'
      documentation:
        doc: List Events
        doc_link: https://developer.webex.com/docs/api/v1/events/list-events
        endpoint: https://webexapis.com/v1/events
        http_method: GET
      header: List Events
      parameters_and_response:
        Query Parameters:
        - doc: 'List events with a specific resource type.

            Possible values: messages, memberships, meetings, meetingMessages, meetingTranscripts,
            tabs, rooms, attachmentActions, files, file_transcodings'
          name: resource
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'List events with a specific event type.

            Possible values: created, updated, deleted, ended'
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List events performed by this person, by person ID.
          name: actorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List events which occurred after a specific date and time.
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List events which occurred before a specific date and time. If unspecified,
            or set to a time in the future, lists events up to the present.
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the maximum number of events in the response. Value must be between
            1 and 1000, inclusive.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: The unique identifier for the event.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The type of resource in the event.
            name: resource
            param_attrs:
            - doc: State changed on a messages resource
              name: messages
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State changed on a memberships resource
              name: memberships
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State change on a meeting ( here combined with type = 'ended' )
              name: meetings
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State change on a automatic transcript resource for Webex Assistant
              name: meetingTranscripts
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State changed on a meeting message, i.e. message exchanged as part
                of a meeting
              name: meetingMessages
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State changed on a room tabs in a space
              name: tabs
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State changed on a space classification
              name: rooms
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State changed on a card attachment
              name: attachmentActions
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State changed on a file download
              name: files
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: State change on a file preview
              name: file_transcodings
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Event Resource Enum
            type_spec: null
          - doc: The action which took place in the event.
            name: type
            param_attrs:
            - doc: The resource has been created
              name: created
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A property on the resource has been updated
              name: updated
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The resource has been deleted
              name: deleted
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The meeting has ended
              name: ended
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: Event Type Enum
            type_spec: null
          - doc: The ID of the application for the event.
            name: appId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the person who performed the action.
            name: actorId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the organization for the event.
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time of the event.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The event's data representation. This object will contain the event's
              resource, such as memberships, messages, meetings, tabs, rooms or attachmentActions
              at the time the event took place.
            name: data
            param_attrs: []
            param_object:
            - doc: ''
              name: id
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: roomId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: roomType
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: orgId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: text
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: personId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: personEmail
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: meetingId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: creatorId
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The meeting's host data
              name: host
              param_attrs: []
              param_object: []
              type: object
              type_spec: null
            - doc: Common Identity (CI) authenticated meeting attendees
              name: attendees
              param_attrs: []
              param_object: []
              type: array
              type_spec: null
            - doc: indicates whether or not the Voice Assistant was enabled during
                the meeting. If true a transcript should be available a couple minutes
                after the meeting ended at the meetingTranscripts resource
              name: transcriptionEnabled
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: indicates if recording was enabled for all or parts of the meeting.
                If true a recording should be available shortly after the meeting
                ended at the recordings resource
              name: recordingEnabled
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: indicates i chat messages were exchanged during the meeting in
                the meetings client (not the unified client). If true these messages
                can be accessed by a compliance officer at the postMeetingsChat resource.
                Meetings chat collection must be custom enabled.
              name: hasPostMeetingsChat
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: ''
              name: created
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            type: object
            type_spec: null
          param_object: []
          type: array[Event]
          type_spec: null
    - doc: 'Shows details for an event, by event ID.

        Specify the event ID in the eventId parameter in the URI.'
      documentation:
        doc: Get Event Details
        doc_link: https://developer.webex.com/docs/api/v1/events/get-event-details
        endpoint: https://webexapis.com/v1/events/{eventId}
        http_method: GET
      header: Get Event Details
      parameters_and_response:
        Response Properties:
        - doc: The unique identifier for the event.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The type of resource in the event.
          name: resource
          param_attrs:
          - doc: State changed on a messages resource
            name: messages
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State changed on a memberships resource
            name: memberships
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State change on a meeting ( here combined with type = 'ended' )
            name: meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State change on a automatic transcript resource for Webex Assistant
            name: meetingTranscripts
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State changed on a meeting message, i.e. message exchanged as part
              of a meeting
            name: meetingMessages
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State changed on a room tabs in a space
            name: tabs
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State changed on a space classification
            name: rooms
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State changed on a card attachment
            name: attachmentActions
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State changed on a file download
            name: files
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: State change on a file preview
            name: file_transcodings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Event Resource Enum
          type_spec: null
        - doc: The action which took place in the event.
          name: type
          param_attrs:
          - doc: The resource has been created
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A property on the resource has been updated
            name: updated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The resource has been deleted
            name: deleted
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The meeting has ended
            name: ended
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: Event Type Enum
          type_spec: null
        - doc: The ID of the application for the event.
          name: appId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the person who performed the action.
          name: actorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization for the event.
          name: orgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time of the event.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The event's data representation. This object will contain the event's
            resource, such as memberships, messages, meetings, tabs, rooms or attachmentActions
            at the time the event took place.
          name: data
          param_attrs: []
          param_object:
          - doc: ''
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: roomId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: roomType
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: orgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: text
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: personEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: meetingId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: creatorId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The meeting's host data
            name: host
            param_attrs: []
            param_object: []
            type: object
            type_spec: null
          - doc: Common Identity (CI) authenticated meeting attendees
            name: attendees
            param_attrs: []
            param_object: []
            type: array
            type_spec: null
          - doc: indicates whether or not the Voice Assistant was enabled during the
              meeting. If true a transcript should be available a couple minutes after
              the meeting ended at the meetingTranscripts resource
            name: transcriptionEnabled
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: indicates if recording was enabled for all or parts of the meeting.
              If true a recording should be available shortly after the meeting ended
              at the recordings resource
            name: recordingEnabled
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: indicates i chat messages were exchanged during the meeting in the
              meetings client (not the unified client). If true these messages can
              be accessed by a compliance officer at the postMeetingsChat resource.
              Meetings chat collection must be custom enabled.
            name: hasPostMeetingsChat
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          type: object
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the event.
          name: eventId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Memberships:
    doc: 'Memberships represent a person''s relationship to a room. Use this API to
      list members of any room that you''re in or create memberships to invite someone
      to a room. Compliance Officers can now also list memberships for personEmails
      where the CO is not part of the room.

      Memberships can also be updated to make someone a moderator, or deleted, to
      remove someone from the room.

      Just like in the Webex client, you must be a member of the room in order to
      list its memberships or invite people.'
    header: Memberships
    methods:
    - doc: 'Lists all room memberships. By default, lists memberships for rooms to
        which the authenticated user belongs.

        Use query parameters to filter the response.

        Use roomId to list memberships for a room, by ID.

        NOTE: For moderated team spaces, the list of memberships will include only
        the space moderators if the user is a team member but not a direct participant
        of the space.

        Use either personId or personEmail to filter the results. The roomId parameter
        is required when using these parameters.

        Long result sets will be split into pages.'
      documentation:
        doc: List Memberships
        doc_link: https://developer.webex.com/docs/api/v1/memberships/list-memberships
        endpoint: https://webexapis.com/v1/memberships
        http_method: GET
      header: List Memberships
      parameters_and_response:
        Query Parameters:
        - doc: List memberships associated with a room, by ID.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List memberships associated with a person, by ID. The roomId parameter
            is required when using this parameter.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: List memberships associated with a person, by email address. The roomId
            parameter is required when using this parameter.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the maximum number of memberships in the response.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the membership.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The room ID.
            name: roomId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The person ID.
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email address of the person.
            name: personEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The display name of the person.
            name: personDisplayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The organization ID of the person.
            name: personOrgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the participant is a room moderator.
            name: isModerator
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Whether or not the direct type room is hidden in the Webex clients.
            name: isRoomHidden
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The type of room the membership is associated with.
            name: roomType
            param_attrs:
            - doc: 1:1 room.
              name: direct
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Group room.
              name: group
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether or not the participant is a monitoring bot (deprecated).
            name: isMonitor
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The date and time when the membership was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Membership]
          type_spec: null
    - doc: Add someone to a room by Person ID or email address, optionally making
        them a moderator.
      documentation:
        doc: Create a Membership
        doc_link: https://developer.webex.com/docs/api/v1/memberships/create-a-membership
        endpoint: https://webexapis.com/v1/memberships
        http_method: POST
      header: Create a Membership
      parameters_and_response:
        Body Parameters:
        - doc: The room ID.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a room moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the membership.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room ID.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The display name of the person.
          name: personDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a room moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not the direct type room is hidden in the Webex clients.
          name: isRoomHidden
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The type of room the membership is associated with.
          name: roomType
          param_attrs:
          - doc: 1:1 room.
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Group room.
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not the participant is a monitoring bot (deprecated).
          name: isMonitor
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The date and time when the membership was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Get details for a membership by ID.

        Specify the membership ID in the membershipId URI parameter.'
      documentation:
        doc: Get Membership Details
        doc_link: https://developer.webex.com/docs/api/v1/memberships/get-membership-details
        endpoint: https://webexapis.com/v1/memberships/{membershipId}
        http_method: GET
      header: Get Membership Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the membership.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room ID.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The display name of the person.
          name: personDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a room moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not the direct type room is hidden in the Webex clients.
          name: isRoomHidden
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The type of room the membership is associated with.
          name: roomType
          param_attrs:
          - doc: 1:1 room.
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Group room.
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not the participant is a monitoring bot (deprecated).
          name: isMonitor
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The date and time when the membership was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the membership.
          name: membershipId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Updates properties for a membership by ID.

        Specify the membership ID in the membershipId URI parameter.'
      documentation:
        doc: Update a Membership
        doc_link: https://developer.webex.com/docs/api/v1/memberships/update-a-membership
        endpoint: https://webexapis.com/v1/memberships/{membershipId}
        http_method: PUT
      header: Update a Membership
      parameters_and_response:
        Body Parameters:
        - doc: Whether or not the participant is a room moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        - doc: When set to true, hides direct spaces in the teams client. Any new
            message will make the room visible again.
          name: isRoomHidden
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        Response Properties:
        - doc: A unique identifier for the membership.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room ID.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The display name of the person.
          name: personDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a room moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Whether or not the direct type room is hidden in the Webex clients.
          name: isRoomHidden
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The type of room the membership is associated with.
          name: roomType
          param_attrs:
          - doc: 1:1 room.
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Group room.
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether or not the participant is a monitoring bot (deprecated).
          name: isMonitor
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The date and time when the membership was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the membership.
          name: membershipId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes a membership by ID.

        Specify the membership ID in the membershipId URI parameter.

        The membership for the last moderator of a Team''s General space may not be
        deleted; promote another user to team moderator first.'
      documentation:
        doc: Delete a Membership
        doc_link: https://developer.webex.com/docs/api/v1/memberships/delete-a-membership
        endpoint: https://webexapis.com/v1/memberships/{membershipId}
        http_method: DELETE
      header: Delete a Membership
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the membership.
          name: membershipId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Messages:
    doc: null
    header: null
    methods: []
  People:
    doc: null
    header: null
    methods: []
  Room Tabs:
    doc: 'A Room Tab represents a URL shortcut that is added as a persistent tab to
      a Webex room (space) tab row. Use this API to list tabs of any Webex room that
      you belong to. Room Tabs can also be updated to point to a different content
      URL, or deleted to remove the tab from the room.

      Just like in the Webex app, you must be a member of the room in order to list
      its Room Tabs.'
    header: Room Tabs
    methods:
    - doc: Lists all Room Tabs of a room specified by the roomId query parameter.
      documentation:
        doc: List Room Tabs
        doc_link: https://developer.webex.com/docs/api/v1/room-tabs/list-room-tabs
        endpoint: https://webexapis.com/v1/room/tabs
        http_method: GET
      header: List Room Tabs
      parameters_and_response:
        Query Parameters:
        - doc: ID of the room for which to list room tabs.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the Room Tab.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A unique identifier for the room containing the room tab.
            name: roomId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The room type.
            name: roomType
            param_attrs:
            - doc: 1:1 room
              name: direct
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: group room
              name: group
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: User-friendly name for the room tab.
            name: displayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Room Tab's content URL.
            name: contentUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The person ID of the person who created this Room Tab.
            name: creatorId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time when the Room Tab was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Room Tab]
          type_spec: null
    - doc: Add a tab with a specified URL to a room.
      documentation:
        doc: Create a Room Tab
        doc_link: https://developer.webex.com/docs/api/v1/room-tabs/create-a-room-tab
        endpoint: https://webexapis.com/v1/room/tabs
        http_method: POST
      header: Create a Room Tab
      parameters_and_response:
        Body Parameters:
        - doc: A unique identifier for the room.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: URL of the Room Tab. Must use https protocol.
          name: contentUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: User-friendly name for the room tab.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: A unique identifier for the Room Tab.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique identifier for the room containing the room tab.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room type.
          name: roomType
          param_attrs:
          - doc: 1:1 room
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: group room
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: User-friendly name for the room tab.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Room Tab's content URL.
          name: contentUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID of the person who created this Room Tab.
          name: creatorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time when the Room Tab was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: Get details for a Room Tab with the specified room tab ID.
      documentation:
        doc: Get Room Tab Details
        doc_link: https://developer.webex.com/docs/api/v1/room-tabs/get-room-tab-details
        endpoint: https://webexapis.com/v1/room/tabs/{id}
        http_method: GET
      header: Get Room Tab Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the Room Tab.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique identifier for the room containing the room tab.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room type.
          name: roomType
          param_attrs:
          - doc: 1:1 room
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: group room
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: User-friendly name for the room tab.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Room Tab's content URL.
          name: contentUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID of the person who created this Room Tab.
          name: creatorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time when the Room Tab was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the Room Tab.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Updates the content URL of the specified Room Tab ID.
      documentation:
        doc: Update a Room Tab
        doc_link: https://developer.webex.com/docs/api/v1/room-tabs/update-a-room-tab
        endpoint: https://webexapis.com/v1/room/tabs/{id}
        http_method: PUT
      header: Update a Room Tab
      parameters_and_response:
        Body Parameters:
        - doc: ID of the room that contains the room tab in question.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Content URL of the Room Tab. URL must use https protocol.
          name: contentUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: User-friendly name for the room tab.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        Response Properties:
        - doc: A unique identifier for the Room Tab.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A unique identifier for the room containing the room tab.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room type.
          name: roomType
          param_attrs:
          - doc: 1:1 room
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: group room
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: User-friendly name for the room tab.
          name: displayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Room Tab's content URL.
          name: contentUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID of the person who created this Room Tab.
          name: creatorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time when the Room Tab was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the Room Tab.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: Deletes a Room Tab with the specified ID.
      documentation:
        doc: Delete a Room Tab
        doc_link: https://developer.webex.com/docs/api/v1/room-tabs/delete-a-room-tab
        endpoint: https://webexapis.com/v1/room/tabs/{id}
        http_method: DELETE
      header: Delete a Room Tab
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the Room Tab to delete.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Rooms:
    doc: 'Rooms are virtual meeting places where people post messages and collaborate
      to get work done. This API is used to manage the rooms themselves. Rooms are
      created and deleted with this API. You can also update a room to change its
      title or make it public, for example.

      To create a team room, specify the a teamId in the POST payload. Note that once
      a room is added to a team, it cannot be moved. To learn more about managing
      teams, see the Teams API.

      To manage people in a room see the Memberships API.

      To post content see the Messages API.'
    header: Rooms
    methods:
    - doc: 'List rooms.

        The title of the room for 1:1 rooms will be the display name of the other
        person.

        By default, lists rooms to which the authenticated user belongs.

        Long result sets will be split into pages.

        Known Limitations:

        The underlying database does not support natural sorting by lastactivity and
        will only sort on limited set of results, which are pulled from the database
        in order of roomId. For users or bots in more than 3000 spaces this can result
        in anomalies such as spaces that have had recent activity not being returned
        in the results when sorting by lastacivity.'
      documentation:
        doc: List Rooms
        doc_link: https://developer.webex.com/docs/api/v1/rooms/list-rooms
        endpoint: https://webexapis.com/v1/rooms
        http_method: GET
      header: List Rooms
      parameters_and_response:
        Query Parameters:
        - doc: List rooms associated with a team, by ID. Cannot be set in combination
            with orgPublicSpaces.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'List rooms by type. Cannot be set in combination with orgPublicSpaces.

            Possible values: direct, group'
          name: type
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Shows the org's public spaces joined and unjoined. When set the result
            list is sorted by the madePublic timestamp.
          name: orgPublicSpaces
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Filters rooms, that were made public after this time. See madePublic
            timestamp
          name: from
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Filters rooms, that were made public before this time. See maePublic
            timestamp
          name: to
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: 'Sort results. Cannot be set in combination with orgPublicSpaces.

            Possible values: id, lastactivity, created'
          name: sortBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Limit the maximum number of rooms in the response. Value must be between
            1 and 1000, inclusive.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the room.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A user-friendly name for the room.
            name: title
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The room type.
            name: type
            param_attrs:
            - doc: 1:1 room.
              name: direct
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: Group room.
              name: group
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: Whether the room is moderated (locked) or not.
            name: isLocked
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The ID for the team with which this room is associated.
            name: teamId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time of the room's last activity.
            name: lastActivity
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the person who created this room.
            name: creatorId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the room was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The ID of the organization which owns this room. See Webex Data in
              the Compliance Guide for more information.
            name: ownerId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Space classification ID represents the space's current classification.  It
              can be attached during space creation time, and can be modified at the
              request of an authorized user.
            name: classificationId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Indicates when a space is in Announcement Mode where only moderators
              can post messages
            name: isAnnouncementOnly
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: A compliance officer can set a direct room as read-only, which will
              disallow any new information exchanges in this space, while maintaing
              historical data.
            name: isReadOnly
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The room is public and therefore discoverable within the org. Anyone
              can find and join that room.
            name: isPublic
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: Date and time when the room was made public.
            name: madePublic
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The description of the space.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Room]
          type_spec: null
    - doc: 'Creates a room. The authenticated user is automatically added as a member
        of the room. See the Memberships API to learn how to add more people to the
        room.

        To create a 1:1 room, use the Create Messages endpoint to send a message directly
        to another person by using the toPersonId or toPersonEmail parameters.

        Bots are not able to create and classify a room. A bot may update a space
        classification after a person of the same owning organization joined the space
        as the first human user.

        A space can only be put into announcement mode when it is locked.'
      documentation:
        doc: Create a Room
        doc_link: https://developer.webex.com/docs/api/v1/rooms/create-a-room
        endpoint: https://webexapis.com/v1/rooms
        http_method: POST
      header: Create a Room
      parameters_and_response:
        Body Parameters:
        - doc: A user-friendly name for the room.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The ID for the team with which this room is associated.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The classificationId for the room.
          name: classificationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Set the space as locked/moderated and the creator becomes a moderator
          name: isLocked
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The room is public and therefore discoverable within the org. Anyone
            can find and join that room. When true the description must be filled
            in.
          name: isPublic
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The description of the space.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Sets the space into announcement Mode.
          name: isAnnouncementOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the room.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the room.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room type.
          name: type
          param_attrs:
          - doc: 1:1 room.
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Group room.
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether the room is moderated (locked) or not.
          name: isLocked
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The ID for the team with which this room is associated.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time of the room's last activity.
          name: lastActivity
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the person who created this room.
          name: creatorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the room was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization which owns this room. See Webex Data in
            the Compliance Guide for more information.
          name: ownerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Space classification ID represents the space's current classification.  It
            can be attached during space creation time, and can be modified at the
            request of an authorized user.
          name: classificationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates when a space is in Announcement Mode where only moderators
            can post messages
          name: isAnnouncementOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: A compliance officer can set a direct room as read-only, which will
            disallow any new information exchanges in this space, while maintaing
            historical data.
          name: isReadOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The room is public and therefore discoverable within the org. Anyone
            can find and join that room.
          name: isPublic
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Date and time when the room was made public.
          name: madePublic
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The description of the space.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Shows details for a room, by ID.

        The title of the room for 1:1 rooms will be the display name of the other
        person.

        Specify the room ID in the roomId parameter in the URI.'
      documentation:
        doc: Get Room Details
        doc_link: https://developer.webex.com/docs/api/v1/rooms/get-room-details
        endpoint: https://webexapis.com/v1/rooms/{roomId}
        http_method: GET
      header: Get Room Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the room.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the room.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room type.
          name: type
          param_attrs:
          - doc: 1:1 room.
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Group room.
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether the room is moderated (locked) or not.
          name: isLocked
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The ID for the team with which this room is associated.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time of the room's last activity.
          name: lastActivity
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the person who created this room.
          name: creatorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the room was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization which owns this room. See Webex Data in
            the Compliance Guide for more information.
          name: ownerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Space classification ID represents the space's current classification.  It
            can be attached during space creation time, and can be modified at the
            request of an authorized user.
          name: classificationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates when a space is in Announcement Mode where only moderators
            can post messages
          name: isAnnouncementOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: A compliance officer can set a direct room as read-only, which will
            disallow any new information exchanges in this space, while maintaing
            historical data.
          name: isReadOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The room is public and therefore discoverable within the org. Anyone
            can find and join that room.
          name: isPublic
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Date and time when the room was made public.
          name: madePublic
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The description of the space.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the room.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Shows Webex meeting details for a room such as the SIP address, meeting
        URL, toll-free and toll dial-in numbers.

        Specify the room ID in the roomId parameter in the URI.'
      documentation:
        doc: Get Room Meeting Details
        doc_link: https://developer.webex.com/docs/api/v1/rooms/get-room-meeting-details
        endpoint: https://webexapis.com/v1/rooms/{roomId}/meetingInfo
        http_method: GET
      header: Get Room Meeting Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the room.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Webex meeting URL for the room.
          name: meetingLink
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The SIP address for the room.
          name: sipAddress
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Webex meeting number for the room.
          name: meetingNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The Webex meeting ID for the room.
          name: meetingId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The toll-free PSTN number for the room.
          name: callInTollFreeNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The toll (local) PSTN number for the room.
          name: callInTollNumber
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the room.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Updates details for a room, by ID.

        Specify the room ID in the roomId parameter in the URI.

        A space can only be put into announcement mode when it is locked.

        Any space participant or compliance officer can convert a space from public
        to private. Conversion from private to public is currently not supported.
        To remove a description please use a space character   by itself.'
      documentation:
        doc: Update a Room
        doc_link: https://developer.webex.com/docs/api/v1/rooms/update-a-room
        endpoint: https://webexapis.com/v1/rooms/{roomId}
        http_method: PUT
      header: Update a Room
      parameters_and_response:
        Body Parameters:
        - doc: A user-friendly name for the room.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The classificationId for the room.
          name: classificationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The teamId to which this space should be assigned. Only unowned spaces
            can be assigned to a team. Assignment between teams is unsupported.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Set the space as locked/moderated and the creator becomes a moderator
          name: isLocked
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The room is public and therefore discoverable within the org. Anyone
            can find and join that room. When true the description must be filled
            in.
          name: isPublic
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The description of the space.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Sets the space into Announcement Mode or clears the Anouncement Mode
            (false)
          name: isAnnouncementOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: A compliance officer can set a direct room as read-only, which will
            disallow any new information exchanges in this space, while maintaing
            historical data.
          name: isReadOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the room.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the room.
          name: title
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The room type.
          name: type
          param_attrs:
          - doc: 1:1 room.
            name: direct
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Group room.
            name: group
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: Whether the room is moderated (locked) or not.
          name: isLocked
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The ID for the team with which this room is associated.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time of the room's last activity.
          name: lastActivity
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the person who created this room.
          name: creatorId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the room was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The ID of the organization which owns this room. See Webex Data in
            the Compliance Guide for more information.
          name: ownerId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Space classification ID represents the space's current classification.  It
            can be attached during space creation time, and can be modified at the
            request of an authorized user.
          name: classificationId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Indicates when a space is in Announcement Mode where only moderators
            can post messages
          name: isAnnouncementOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: A compliance officer can set a direct room as read-only, which will
            disallow any new information exchanges in this space, while maintaing
            historical data.
          name: isReadOnly
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The room is public and therefore discoverable within the org. Anyone
            can find and join that room.
          name: isPublic
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: Date and time when the room was made public.
          name: madePublic
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The description of the space.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the room.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes a room, by ID. Deleted rooms cannot be recovered.

        As a security measure to prevent accidental deletion, when a non moderator
        deletes the room they are removed from the room instead.

        Deleting a room that is part of a team will archive the room instead.

        Specify the room ID in the roomId parameter in the URI.'
      documentation:
        doc: Delete a Room
        doc_link: https://developer.webex.com/docs/api/v1/rooms/delete-a-room
        endpoint: https://webexapis.com/v1/rooms/{roomId}
        http_method: DELETE
      header: Delete a Room
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the room.
          name: roomId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Team Memberships:
    doc: 'Team Memberships represent a person''s relationship to a team. Use this
      API to list members of any team that you''re in or create memberships to invite
      someone to a team. Team memberships can also be updated to make someone a moderator
      or deleted to remove them from the team.

      Just like in the Webex app, you must be a member of the team in order to list
      its memberships or invite people.'
    header: Team Memberships
    methods:
    - doc: 'Lists all team memberships for a given team, specified by the teamId query
        parameter.

        Use query parameters to filter the response.'
      documentation:
        doc: List Team Memberships
        doc_link: https://developer.webex.com/docs/api/v1/team-memberships/list-team-memberships
        endpoint: https://webexapis.com/v1/team/memberships
        http_method: GET
      header: List Team Memberships
      parameters_and_response:
        Query Parameters:
        - doc: List memberships for a team, by ID.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: Limit the maximum number of team memberships in the response.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the team membership.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The team ID.
            name: teamId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The person ID.
            name: personId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The email address of the person.
            name: personEmail
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The display name of the person.
            name: personDisplayName
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The organization ID of the person.
            name: personOrgId
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Whether or not the participant is a team moderator.
            name: isModerator
            param_attrs: []
            param_object: []
            type: boolean
            type_spec: null
          - doc: The date and time when the team membership was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Team Membership]
          type_spec: null
    - doc: Add someone to a team by Person ID or email address, optionally making
        them a moderator.
      documentation:
        doc: Create a Team Membership
        doc_link: https://developer.webex.com/docs/api/v1/team-memberships/create-a-team-membership
        endpoint: https://webexapis.com/v1/team/memberships
        http_method: POST
      header: Create a Team Membership
      parameters_and_response:
        Body Parameters:
        - doc: The team ID.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a team moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the team membership.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The team ID.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The display name of the person.
          name: personDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a team moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The date and time when the team membership was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Shows details for a team membership, by ID.

        Specify the team membership ID in the membershipId URI parameter.'
      documentation:
        doc: Get Team Membership Details
        doc_link: https://developer.webex.com/docs/api/v1/team-memberships/get-team-membership-details
        endpoint: https://webexapis.com/v1/team/memberships/{membershipId}
        http_method: GET
      header: Get Team Membership Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the team membership.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The team ID.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The display name of the person.
          name: personDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a team moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The date and time when the team membership was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the team membership.
          name: membershipId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Updates a team membership, by ID.

        Specify the team membership ID in the membershipId URI parameter.'
      documentation:
        doc: Update a Team Membership
        doc_link: https://developer.webex.com/docs/api/v1/team-memberships/update-a-team-membership
        endpoint: https://webexapis.com/v1/team/memberships/{membershipId}
        http_method: PUT
      header: Update a Team Membership
      parameters_and_response:
        Body Parameters:
        - doc: Whether or not the participant is a team moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: required
        Response Properties:
        - doc: A unique identifier for the team membership.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The team ID.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The person ID.
          name: personId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The email address of the person.
          name: personEmail
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The display name of the person.
          name: personDisplayName
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The organization ID of the person.
          name: personOrgId
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Whether or not the participant is a team moderator.
          name: isModerator
          param_attrs: []
          param_object: []
          type: boolean
          type_spec: null
        - doc: The date and time when the team membership was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the team membership.
          name: membershipId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes a team membership, by ID.

        Specify the team membership ID in the membershipId URI parameter.

        The team membership for the last moderator of a team may not be deleted; promote
        another user to team moderator first.'
      documentation:
        doc: Delete a Team Membership
        doc_link: https://developer.webex.com/docs/api/v1/team-memberships/delete-a-team-membership
        endpoint: https://webexapis.com/v1/team/memberships/{membershipId}
        http_method: DELETE
      header: Delete a Team Membership
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the team membership.
          name: membershipId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Teams:
    doc: 'Teams are groups of people with a set of rooms that are visible to all members
      of that team. This API is used to manage the teams themselves. Teams are created
      and deleted with this API. You can also update a team to change its name, for
      example.

      To manage people in a team see the Team Memberships API.

      To manage team rooms see the Rooms API.'
    header: Teams
    methods:
    - doc: Lists teams to which the authenticated user belongs.
      documentation:
        doc: List Teams
        doc_link: https://developer.webex.com/docs/api/v1/teams/list-teams
        endpoint: https://webexapis.com/v1/teams
        http_method: GET
      header: List Teams
      parameters_and_response:
        Query Parameters:
        - doc: Limit the maximum number of teams in the response.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the team.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A user-friendly name for the team.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The teams description.
            name: description
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The date and time the team was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Team]
          type_spec: null
    - doc: 'Creates a team.

        The authenticated user is automatically added as a member of the team. See
        the Team Memberships API to learn how to add more people to the team.'
      documentation:
        doc: Create a Team
        doc_link: https://developer.webex.com/docs/api/v1/teams/create-a-team
        endpoint: https://webexapis.com/v1/teams
        http_method: POST
      header: Create a Team
      parameters_and_response:
        Body Parameters:
        - doc: A user-friendly name for the team.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The teams description.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the team.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the team.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The teams description.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the team was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Shows details for a team, by ID.

        Specify the team ID in the teamId parameter in the URI.'
      documentation:
        doc: Get Team Details
        doc_link: https://developer.webex.com/docs/api/v1/teams/get-team-details
        endpoint: https://webexapis.com/v1/teams/{teamId}
        http_method: GET
      header: Get Team Details
      parameters_and_response:
        Query Parameters:
        - doc: The teams description.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the team.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the team.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The teams description.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the team was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the team.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Updates details for a team, by ID.

        Specify the team ID in the teamId parameter in the URI.'
      documentation:
        doc: Update a Team
        doc_link: https://developer.webex.com/docs/api/v1/teams/update-a-team
        endpoint: https://webexapis.com/v1/teams/{teamId}
        http_method: PUT
      header: Update a Team
      parameters_and_response:
        Body Parameters:
        - doc: A user-friendly name for the team.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The teams description.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the team.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the team.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The teams description.
          name: description
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The date and time the team was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the team.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes a team, by ID.

        Specify the team ID in the teamId parameter in the URI.'
      documentation:
        doc: Delete a Team
        doc_link: https://developer.webex.com/docs/api/v1/teams/delete-a-team
        endpoint: https://webexapis.com/v1/teams/{teamId}
        http_method: DELETE
      header: Delete a Team
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the team.
          name: teamId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
  Tracking Codes:
    doc: null
    header: null
    methods: []
  Webhooks:
    doc: 'For Webex for Government (FedRAMP), the following resource types are not
      available for Webhooks: meetings, recordings, meetingParticipants, and meetingTranscripts.

      Webhooks allow your app to be notified via HTTP when a specific event occurs
      in Webex. For example, your app can register a webhook to be notified when a
      new message is posted into a specific room.

      Events trigger in near real-time allowing your app and backend IT systems to
      stay in sync with new content and room activity.

      Check The Webhooks Guide and our blog regularly for announcements of additional
      webhook resources and event types.

      Long result sets will be split into pages.'
    header: Webhooks
    methods:
    - doc: List all of your webhooks.
      documentation:
        doc: List Webhooks
        doc_link: https://developer.webex.com/docs/api/v1/webhooks/list-webhooks
        endpoint: https://webexapis.com/v1/webhooks
        http_method: GET
      header: List Webhooks
      parameters_and_response:
        Query Parameters:
        - doc: Limit the maximum number of webhooks in the response.
          name: max
          param_attrs: []
          param_object: []
          type: number
          type_spec: null
        - doc: Limit the result list to org wide webhooks. Only allowed value is org.
          name: ownedBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: ''
          name: items
          param_attrs:
          - doc: A unique identifier for the webhook.
            name: id
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A user-friendly name for the webhook.
            name: name
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The URL that receives POST requests for each event.
            name: targetUrl
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The resource type for the webhook. Creating a webhook requires 'read'
              scope on the resource the webhook is for.
            name: resource
            param_attrs:
            - doc: The Attachment Actions resource.
              name: attachmentActions
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Memberships resource.
              name: memberships
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Messages resource.
              name: messages
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Rooms resource.
              name: rooms
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Meetings resource.
              name: meetings
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Recordings resource.
              name: recordings
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Meeting Participants resource.
              name: meetingParticipants
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The Meeting Transcripts resource.
              name: meetingTranscripts
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The event type for the webhook.
            name: event
            param_attrs:
            - doc: An object was created.
              name: created
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: An object was updated.
              name: updated
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: An object was deleted.
              name: deleted
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A meeting was started.
              name: started
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A meeting was ended.
              name: ended
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A participant joined.
              name: joined
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: A participant left.
              name: left
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The filter that defines the webhook scope.
            name: filter
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The secret used to generate payload signature.
            name: secret
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The status of the webhook. Use active to reactivate a disabled webhook.
            name: status
            param_attrs:
            - doc: The webhook is active.
              name: active
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            - doc: The webhook is inactive.
              name: inactive
              param_attrs: []
              param_object: []
              type: string
              type_spec: null
            param_object: []
            type: enum
            type_spec: null
          - doc: The date and time the webhook was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: Specified when creating an org/admin level webhook.
            name: ownedBy
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: array[Webhook]
          type_spec: null
    - doc: 'Creates a webhook.

        To learn more about how to create and use webhooks, see The Webhooks Guide.'
      documentation:
        doc: Create a Webhook
        doc_link: https://developer.webex.com/docs/api/v1/webhooks/create-a-webhook
        endpoint: https://webexapis.com/v1/webhooks
        http_method: POST
      header: Create a Webhook
      parameters_and_response:
        Body Parameters:
        - doc: A user-friendly name for the webhook.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The URL that receives POST requests for each event.
          name: targetUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The resource type for the webhook. Creating a webhook requires 'read'
            scope on the resource the webhook is for.
          name: resource
          param_attrs:
          - doc: The Attachment Actions resource.
            name: attachmentActions
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Memberships resource.
            name: memberships
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Messages resource.
            name: messages
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Rooms resource.
            name: rooms
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meetings resource.
            name: meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Recordings resource.
            name: recordings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Participants resource.
            name: meetingParticipants
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Transcripts resource.
            name: meetingTranscripts
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: The event type for the webhook.
          name: event
          param_attrs:
          - doc: An object is created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object is updated.
            name: updated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object is deleted.
            name: deleted
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting is started.
            name: started
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting is ended.
            name: ended
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant joined.
            name: joined
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant left.
            name: left
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: required
        - doc: The filter that defines the webhook scope. See Filtering Webhooks for
            more information.
          name: filter
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The secret used to generate payload signature.
          name: secret
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specified when creating an org/admin level webhook. Supported for meetings,
            recordings, meetingParticipants, and meetingTranscripts resources.
          name: ownedBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the webhook.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the webhook.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL that receives POST requests for each event.
          name: targetUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The resource type for the webhook. Creating a webhook requires 'read'
            scope on the resource the webhook is for.
          name: resource
          param_attrs:
          - doc: The Attachment Actions resource.
            name: attachmentActions
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Memberships resource.
            name: memberships
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Messages resource.
            name: messages
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Rooms resource.
            name: rooms
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meetings resource.
            name: meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Recordings resource.
            name: recordings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Participants resource.
            name: meetingParticipants
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Transcripts resource.
            name: meetingTranscripts
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The event type for the webhook.
          name: event
          param_attrs:
          - doc: An object was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object was updated.
            name: updated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object was deleted.
            name: deleted
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting was started.
            name: started
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting was ended.
            name: ended
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant joined.
            name: joined
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant left.
            name: left
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The filter that defines the webhook scope.
          name: filter
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The secret used to generate payload signature.
          name: secret
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The status of the webhook. Use active to reactivate a disabled webhook.
          name: status
          param_attrs:
          - doc: The webhook is active.
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The webhook is inactive.
            name: inactive
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The date and time the webhook was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specified when creating an org/admin level webhook.
          name: ownedBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
    - doc: 'Shows details for a webhook, by ID.

        Specify the webhook ID in the webhookId parameter in the URI.'
      documentation:
        doc: Get Webhook Details
        doc_link: https://developer.webex.com/docs/api/v1/webhooks/get-webhook-details
        endpoint: https://webexapis.com/v1/webhooks/{webhookId}
        http_method: GET
      header: Get Webhook Details
      parameters_and_response:
        Response Properties:
        - doc: A unique identifier for the webhook.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the webhook.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL that receives POST requests for each event.
          name: targetUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The resource type for the webhook. Creating a webhook requires 'read'
            scope on the resource the webhook is for.
          name: resource
          param_attrs:
          - doc: The Attachment Actions resource.
            name: attachmentActions
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Memberships resource.
            name: memberships
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Messages resource.
            name: messages
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Rooms resource.
            name: rooms
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meetings resource.
            name: meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Recordings resource.
            name: recordings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Participants resource.
            name: meetingParticipants
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Transcripts resource.
            name: meetingTranscripts
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The event type for the webhook.
          name: event
          param_attrs:
          - doc: An object was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object was updated.
            name: updated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object was deleted.
            name: deleted
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting was started.
            name: started
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting was ended.
            name: ended
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant joined.
            name: joined
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant left.
            name: left
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The filter that defines the webhook scope.
          name: filter
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The secret used to generate payload signature.
          name: secret
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The status of the webhook. Use active to reactivate a disabled webhook.
          name: status
          param_attrs:
          - doc: The webhook is active.
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The webhook is inactive.
            name: inactive
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The date and time the webhook was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specified when creating an org/admin level webhook.
          name: ownedBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the webhook.
          name: webhookId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: "Updates a webhook, by ID. You cannot use this call to deactivate a webhook,\
        \ only to activate a webhook that was auto deactivated. \nThe fields that\
        \ can be updated are name, targetURL, secret and status. All other fields,\
        \ if supplied, are ignored.\nSpecify the webhook ID in the webhookId parameter\
        \ in the URI."
      documentation:
        doc: Update a Webhook
        doc_link: https://developer.webex.com/docs/api/v1/webhooks/update-a-webhook
        endpoint: https://webexapis.com/v1/webhooks/{webhookId}
        http_method: PUT
      header: Update a Webhook
      parameters_and_response:
        Body Parameters:
        - doc: A user-friendly name for the webhook.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The URL that receives POST requests for each event.
          name: targetUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
        - doc: The secret used to generate payload signature.
          name: secret
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specified when creating an org/admin level webhook. Supported for meetings,
            recordings, meetingParticipants and meetingTranscripts resources.
          name: ownedBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The status of the webhook. Use "active" to reactivate a disabled webhook.
          name: status
          param_attrs:
          - doc: ''
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: ''
            name: inactive
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        Response Properties:
        - doc: A unique identifier for the webhook.
          name: id
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: A user-friendly name for the webhook.
          name: name
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The URL that receives POST requests for each event.
          name: targetUrl
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The resource type for the webhook. Creating a webhook requires 'read'
            scope on the resource the webhook is for.
          name: resource
          param_attrs:
          - doc: The Attachment Actions resource.
            name: attachmentActions
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Memberships resource.
            name: memberships
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Messages resource.
            name: messages
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Rooms resource.
            name: rooms
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meetings resource.
            name: meetings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Recordings resource.
            name: recordings
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Participants resource.
            name: meetingParticipants
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The Meeting Transcripts resource.
            name: meetingTranscripts
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The event type for the webhook.
          name: event
          param_attrs:
          - doc: An object was created.
            name: created
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object was updated.
            name: updated
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: An object was deleted.
            name: deleted
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting was started.
            name: started
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A meeting was ended.
            name: ended
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant joined.
            name: joined
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: A participant left.
            name: left
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The filter that defines the webhook scope.
          name: filter
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The secret used to generate payload signature.
          name: secret
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: The status of the webhook. Use active to reactivate a disabled webhook.
          name: status
          param_attrs:
          - doc: The webhook is active.
            name: active
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          - doc: The webhook is inactive.
            name: inactive
            param_attrs: []
            param_object: []
            type: string
            type_spec: null
          param_object: []
          type: enum
          type_spec: null
        - doc: The date and time the webhook was created.
          name: created
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        - doc: Specified when creating an org/admin level webhook.
          name: ownedBy
          param_attrs: []
          param_object: []
          type: string
          type_spec: null
        URI Parameters:
        - doc: The unique identifier for the webhook.
          name: webhookId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
    - doc: 'Deletes a webhook, by ID.

        Specify the webhook ID in the webhookId parameter in the URI.'
      documentation:
        doc: Delete a Webhook
        doc_link: https://developer.webex.com/docs/api/v1/webhooks/delete-a-webhook
        endpoint: https://webexapis.com/v1/webhooks/{webhookId}
        http_method: DELETE
      header: Delete a Webhook
      parameters_and_response:
        URI Parameters:
        - doc: The unique identifier for the webhook.
          name: webhookId
          param_attrs: []
          param_object: []
          type: string
          type_spec: required
